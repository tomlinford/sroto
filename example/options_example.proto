// Generated by srotoc. DO NOT EDIT!

syntax = "proto3";

package example;

option go_package = "github.com/tomlinford/sroto/example/options_example";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

message GetUserRequest {
    string id = 1 [
        (google.api.field_behavior) = REQUIRED
    ];
}

message User {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
        example: "{\"id\":\"24508faf-20e3-46ca-8b09-d079b595ef0b\",\"referrer_user_id\":\"27fa4a4e-5650-484f-87f9-bd915889f92b\"}"
    };

    string id = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            min_length: 36,
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        (validate.rules) = {
            string: {
                uuid: true
            }
        }
    ];
    string referrer_user_id = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            min_length: 36,
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        },
        (validate.rules) = {
            string: {
                uuid: true
            }
        }
    ];
}

service UserService {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
        description: "UserService is for various operations on users."
    };

    rpc GetUser(GetUserRequest) returns (User) {
        option (google.api.http) = {
            get: "/users/{id}"
        };
    };
}
